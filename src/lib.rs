pub mod codes_markers;
pub mod decoder;
pub mod huffman_tree;
pub mod image;
pub mod mcu;

#[cfg(test)]
mod tests {
    use crate::mcu::MCU;

    #[test]
    fn test_mcu_idct() {
        let rle = vec![
            vec![
                0, -30, 0, 2, 0, -5, 1, -2, 0, 1, 0, -2, 2, 1, 3, 1, 3, 1, 0, 0,
            ],
            vec![0, 0],
            vec![0, 0],
        ];
        let q_luma = [
            [16, 11, 10, 16, 124, 140, 151, 161],
            [12, 12, 14, 19, 126, 158, 160, 155],
            [14, 13, 16, 24, 140, 157, 169, 156],
            [14, 17, 22, 29, 151, 187, 180, 162],
            [18, 22, 37, 56, 168, 109, 103, 177],
            [24, 35, 55, 64, 181, 104, 113, 192],
            [49, 64, 78, 87, 103, 121, 120, 101],
            [72, 92, 95, 98, 112, 100, 103, 199],
        ];
        let mut mcu = MCU::new(0, rle, [0, 0, 0]);
        assert_eq!(
            mcu.dct_coeff[0],
            [
                -30, 2, -5, 0, -2, 1, -2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0
            ]
        );

        let test = [
            [64, 56, 56, 57, 70, 84, 84, 59],
            [66, 64, 35, 36, 87, 45, 21, 58],
            [66, 66, 66, 59, 35, 87, 26, 104],
            [35, 75, 76, 45, 81, 37, 34, 35],
            [45, 96, 125, 107, 31, 15, 107, 90],
            [88, 89, 88, 78, 64, 57, 85, 81],
            [62, 59, 68, 113, 144, 104, 66, 73],
            [107, 121, 89, 21, 35, 64, 65, 65],
        ];
        mcu.build_idct(q_luma, [[1; 8]; 8]);

        for i in 0..7 {
            for j in 0..7 {
                print!("{} ", mcu.idct_coeff[0][i][j]);
            }
            println!();
        }
        println!();
        for i in 0..7 {
            for j in 0..7 {
                print!("{} ", test[i][j]);
            }
            println!();
        }
        assert_eq!(mcu.idct_coeff, [test, [[0; 8]; 8], [[0; 8]; 8],]);
    }
}
